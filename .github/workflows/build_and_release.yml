---
name: Build and Release

'on':
  push:
    tags:
      - "*"

jobs:
  build-publish-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Get Secrets from Bitwarden
        uses: bitwarden/sm-action@v1
        with:
          access_token: ${{ secrets.BW_ACCESS_TOKEN }}
          secrets: |
            28b3c76f-306a-4498-8481-b133015e224b > DOCKER_USERNAME
            a4dbe828-e58f-4b7b-9283-b133015dde11 > DOCKER_PASSWORD
            9de72260-d37a-4892-b022-b133015e4ee3 > GH_TOKEN

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build Docker images and extract artifacts (Neovim)
        run: |
          docker buildx build --load --tag altayatalay/neovim-builder:latest \
            --cache-from type=registry,ref=altayatalay/neovim-builder:cache \
            --cache-to type=inline,mode=max \
            --output type=local,dest=./neovim-artifacts \
            --file nvim.Dockerfile .

      - name: Rebuild and push Neovim image for caching
        run: |
          docker buildx build --push --tag altayatalay/neovim-builder:latest \
            --cache-from type=registry,ref=altayatalay/neovim-builder:cache \
            --cache-to type=inline,mode=max \
            --file nvim.Dockerfile .

      - name: Build Docker images and extract artifacts (tmux)
        run: |
          docker buildx build --load --tag altayatalay/tmux-builder:latest \
            --cache-from type=registry,ref=altayatalay/tmux-builder:cache \
            --cache-to type=inline,mode=max \
            --output type=local,dest=./tmux-artifacts \
            --file tmux.Dockerfile .

      - name: Rebuild and push tmux image for caching
        run: |
          docker buildx build --push --tag altayatalay/tmux-builder:latest \
            --cache-from type=registry,ref=altayatalay/tmux-builder:cache \
            --cache-to type=inline,mode=max \
            --file tmux.Dockerfile .

      - name: Create GitHub Release and upload artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./neovim-artifacts/*.deb
            ./tmux-artifacts/*.deb
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          make_latest: true
          token: ${{ env.GITHUB_TOKEN }}
